connector.binary.infix.major.0.comma = ,
connector.binary.infix.major.1.minus = -
connector.binary.infix.major.2.plus = +
connector.binary.infix.major.3.divus = /
connector.binary.infix.major.4.muplus = *
connector.binary.infix.major.5.modulo = %

connector.binary.prefix.0.summator = @
connector.binary.prefix.1.productor = ï¿½

connector.unary.prefix.0.additiveInvertor = -
connector.unary.prefix.1.multiplicativeInvertor = /
connector.unary.prefix.2.proativeIncrementor = ++
connector.unary.prefix.3.proativeDecrementor = --

connector.unary.postfix.0.factorial = !
connector.unary.postfix.1.recativeIncrementor = ++
connector.unary.postfix.2.recativeDecrementor = --

connector.unary.outfix.opener.0.parenthesis = (
connector.unary.outfix.opener.1.bracket = [
connector.unary.outfix.opener.2.chevron = <
connector.unary.outfix.opener.3.brace = {

connector.unary.outfix.closer.0.parenthesis = )
connector.unary.outfix.closer.1.bracket = ]
connector.unary.outfix.closer.2.chevron = >
connector.unary.outfix.closer.3.brace = }

connector.binary.infix.minor.0.dot = .
